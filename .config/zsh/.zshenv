# vi: ft=bash

if [ "$ZSHENV_ALREADY_EXECUTED" = "1" ]; then
    return
fi
ZSHENV_ALREADY_EXECUTED="1"

# --

XDG_DATA_HOME="$HOME/.local/share"
XDG_STATE_HOME="$HOME/.local/state"
XDG_CACHE_HOME="$HOME/.local/cache"
XDG_CONFIG_HOME="$HOME/.config"
XDG_LOCAL_BIN_HOME="$HOME/.local/bin"
export XDG_DATA_HOME XDG_STATE_HOME XDG_CACHE_HOME XDG_CONFIG_HOME XDG_LOCAL_BIN_HOME

mkdir -p "$XDG_DATA_HOME" "$XDG_STATE_HOME" "$XDG_CACHE_HOME" "$XDG_CONFIG_HOME" "$XDG_LOCAL_BIN_HOME"

PATH="$XDG_LOCAL_BIN_HOME:$PATH"
export PATH

# --

if [ $commands[nvim] ]; then
    export EDITOR=nvim
elif [ $commands[vim] ]; then
    export EDITOR=vim
else
    export EDITOR=nano
fi

# --

ZINIT_HOME="$XDG_DATA_HOME/zinit/zinit.git"

# --

LANG="en_US.UTF-8"
LC_LANG="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_ADDRESS="en_US.UTF-8"
LC_TELEPHONE="en_US.UTF-8"
LC_MEASUREMENT="en_US.UTF-8"
export LANG LC_LANG LC_MONETARY LC_NUMERIC LC_TIME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT

# --

ZDOTDIR="$XDG_CONFIG_HOME/zsh"
SAVEHIST="10000"
HISTSIZE="1000"
HISTFILE="$XDG_STATE_HOME/zsh/history"
export ZDOTDIR SAVEHIST HISTSIZE HISTFILE

# --

LESSHISTFILE="$XDG_CACHE_HOME/less/history"
export LESSHISTFILE

# --

# Rust
CARGO_HOME="$XDG_DATA_HOME/cargo"
PATH="$PATH:$CARGO_HOME/env"
RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export CARGO_HOME PATH RUSTUP_HOME

# NodeJS
NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"
PATH="$PATH:$XDG_DATA_HOME/npm/bin"
NVM_DIR="$HOME/.config/nvm"
BUN_INSTALL="$XDG_STATE_HOME/bun"
PATH="$BUN_INSTALL/bin:$PATH"
export NPM_CONFIG_USERCONFIG NODE_REPL_HISTORY PATH NVM_DIR BUN_INSTALL

# Python
PYTHON_HISTORY="${XDG_STATE_HOME}/python/history"
export PYTHON_HISTORY

# TensorFlow
KERAS_HOME="${XDG_STATE_HOME}/keras"
export KERAS_HOME

# Java
_JAVA_OPTIONS="-Djava.util.prefs.userRoot=$XDG_CONFIG_HOME/java"
export _JAVA_OPTIONS

# Go
GOPATH="$XDG_DATA_HOME/go"
export GOPATH

# Haskell
STACK_ROOT="$XDG_DATA_HOME/stack"
CABAL_CONFIG="$XDG_CONFIG_HOME/cabal/config"
CABAL_DIR="$XDG_DATA_HOME/cabal"
GHCUP_USE_XDG_DIRS=true
export STACK_ROOT CABAL_CONFIG CABAL_DIR GHCUP_USE_XDG_DIRS

# V
VMODULES="$XDG_DATA_HOME/vmodules"
export VMODULES

# Cuda
CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"
export CUDA_CACHE_PATH

# C#
NUGET_PACKAGES="$XDG_CACHE_HOME/NuGetPackages"
export NUGET_PACKAGES

# Ansible
ANSIBLE_HOME="$XDG_DATA_HOME/ansible"
export ANSIBLE_HOME

# --

WINEPREFIX="$XDG_DATA_HOME/wine"
export WINEPREFIX

# --

GNUPGHOME="$XDG_DATA_HOME/gnupg"
export GNUPGHOME

# --

GVIMINIT='let $MYGVIMRC = !has("nvim") ? "$XDG_CONFIG_HOME/vim/gvimrc" : "$XDG_CONFIG_HOME/nvim/init.gvim" | so $MYGVIMRC'
VIMINIT='let $MYVIMRC = !has("nvim") ? "$XDG_CONFIG_HOME/vim/vimrc" : "$XDG_CONFIG_HOME/nvim/init.lua" | so $MYVIMRC'
export GVIMINIT VIMINIT

# --

GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"
export GTK2_RC_FILES

# --

W3M_DIR="$XDG_STATE_HOME/w3m"
export W3M_DIR

# --

DOCKER_HOST="unix://$XDG_RUNTIME_DIR/docker.sock"
DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export DOCKER_HOST DOCKER_CONFIG

# --

KUBECONFIG="$XDG_CONFIG_HOME/kube"
KUBECACHEDIR="$XDG_CACHE_HOME/kube"
KREW_ROOT="$XDG_DATA_HOME/krew"
PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export KUBECONFIG KUBECACHEDIR KREW_ROOT PATH
